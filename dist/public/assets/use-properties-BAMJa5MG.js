import{J as n,K as i,I as u,M as o}from"./index-gVtgMtKL.js";function h(e){const t=e?Object.fromEntries(Object.entries(e).filter(([,r])=>r!=null&&r!=="").sort(([r],[s])=>r.localeCompare(s))):{};return n({queryKey:["/api/properties",t],staleTime:10*1e3,gcTime:30*1e3,refetchInterval:15*1e3,refetchIntervalInBackground:!0,queryFn:async()=>{console.log("ðŸ”„ Fetching properties from API...");const r=new URLSearchParams;e&&Object.entries(e).forEach(([f,a])=>{a!=null&&a!==""&&r.append(f,a.toString())});const s=`/api/properties${r.toString()?`?${r}`:""}`,c=await fetch(s);if(!c.ok)throw new Error("Failed to fetch properties");const p=await c.json();return console.log("âœ… Properties fetched:",p.length,"properties"),p}})}function l(){return n({queryKey:["/api/properties/featured"],staleTime:2*60*1e3,gcTime:5*60*1e3})}function v(e){return n({queryKey:["/api/properties",e],queryFn:async()=>{const t=await fetch(`/api/properties/${e}`);if(!t.ok)throw new Error(`Failed to fetch property: ${t.status}`);return t.json()},enabled:!!e,staleTime:5*60*1e3,gcTime:10*60*1e3})}function q(){return i({mutationFn:async({query:e,userId:t})=>(await o("POST","/api/search/ai",{query:e,userId:t})).json()})}function m(){return n({queryKey:["/api/search/suggestions"]})}function F(){const e=u();return i({mutationFn:async t=>(await o("POST","/api/inquiries",t)).json(),onSuccess:()=>{e.invalidateQueries({queryKey:["/api/inquiries"]})}})}function w(e){return n({queryKey:["/api/users",e,"favorites"],enabled:!!e})}function g(){const e=u();return i({mutationFn:async({userId:t,propertyId:r})=>(await o("POST","/api/favorites",{userId:t,propertyId:r})).json(),onSuccess:(t,{userId:r,propertyId:s})=>{e.setQueryData(["/api/favorites/check",{userId:r,propertyId:s}],{isFavorite:!0}),e.invalidateQueries({queryKey:["/api/favorites/check",{userId:r,propertyId:s}]}),e.invalidateQueries({queryKey:["/api/users",r,"favorites"]})}})}function d(){const e=u();return i({mutationFn:async({userId:t,propertyId:r})=>(await o("DELETE","/api/favorites",{userId:t,propertyId:r})).json(),onSuccess:(t,{userId:r,propertyId:s})=>{e.setQueryData(["/api/favorites/check",{userId:r,propertyId:s}],{isFavorite:!1}),e.invalidateQueries({queryKey:["/api/favorites/check",{userId:r,propertyId:s}]}),e.invalidateQueries({queryKey:["/api/users",r,"favorites"]})}})}function K(e,t){return n({queryKey:["/api/favorites/check",{userId:e,propertyId:t}],enabled:!!e&&!!t,queryFn:async()=>{const r=await fetch(`/api/favorites/check?userId=${e}&propertyId=${t}`);if(!r.ok)throw new Error("Failed to check favorite status");return r.json()}})}export{h as a,q as b,m as c,F as d,v as e,g as f,d as g,K as h,w as i,l as u};
